name: "Test setup-ros"
on:
  pull_request:
  push:
    branches:
      - master
      - "releases/*"
  schedule:
    # Run the CI automatically twice per day to look for flakyness.
    - cron: "0 */12 * * *"

defaults:
  run:
    shell: bash

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test_environment:
    name: "Check development tools"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.2.0
        with:
          node-version: "12.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./ # Uses an action in the root directory
      - run: .github/workflows/check-environment.sh

  test_environment_linux:
    name: "Check development tools"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - "ubuntu:bionic"
          - "ubuntu:focal"
          - "ubuntu:xenial"
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.2.0
        with:
          node-version: "12.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./ # Uses an action in the root directory
      - run: .github/workflows/check-environment.sh

  # Validates that once setup-ros finished, the ROS distribution
  # setup.sh / local_setup.bat can be sourced, and the ROS distribution is
  # functional.
  test_ros_binary_install:
    name: "Check ROS distribution"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # TODO(ros-tooling/setup-ros#107): Add OS X support
          # - macOS-latest
          - windows-latest
        ros_distribution:
          # Dashing Diademata (May 2019 - May 2021)
          - dashing

          # Eloquent Elusor (November 2019 - November 2020)
          - eloquent
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.2.0
        with:
          node-version: "12.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./ # Uses an action in the root directory
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
      - run: .github/workflows/check-environment.sh
      - run: .github/workflows/check-ros2-distribution.sh "${{ matrix.ros_distribution }}"
        if: matrix.os != 'windows-latest'
      - env:
          ROSDISTRO: ${{ matrix.ros_distribution }}
        run: .github/workflows/check-ros2-distribution-win.bat
        shell: cmd
        if: matrix.os == 'windows-latest'

  test_ros_binary_install_ubuntu:
    name: "Check ROS distribution"
    strategy:
      fail-fast: false
      matrix:
        ros_distribution:
          - kinetic
          - melodic
          - noetic
          - dashing
          - eloquent
          - foxy
          - galactic
          - rolling

        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build
        #
        # Platforms are defined in REP 3: https://ros.org/reps/rep-0003.html
        include:
          # Kinetic Kame (May 2016 - May 2021)
          - docker_image: ubuntu:xenial
            ros_distribution: kinetic
            ros_version: 1

          # Melodic Morenia (May 2018 - May 2023)
          - docker_image: ubuntu:bionic
            ros_distribution: melodic
            ros_version: 1

          # Noetic Ninjemys (May 2020 - May 2025)
          - docker_image: ubuntu:focal
            ros_distribution: noetic
            ros_version: 1

          # Dashing Diademata (May 2019 - May 2021)
          - docker_image: ubuntu:bionic
            ros_distribution: dashing
            ros_version: 2

          # Eloquent Elusor (November 2019 - November 2020)
          - docker_image: ubuntu:bionic
            ros_distribution: eloquent
            ros_version: 2

          # Foxy Fitzroy (June 2020 - May 2023)
          - docker_image: ubuntu:focal
            ros_distribution: foxy
            ros_version: 2

          # Galactic Geochelone (May 2021 - November 2022)
          - docker_image: ubuntu:focal
            ros_distribution: galactic
            ros_version: 2

          # Rolling Ridley (see REP 2002: https://www.ros.org/reps/rep-2002.html)
          - docker_image: ubuntu:focal
            ros_distribution: rolling
            ros_version: 2

    # ROS 1 tests only run on Ubuntu
    container:
      image: ${{ matrix.docker_image }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.2.0
        with:
          node-version: "12.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./ # Uses an action in the root directory
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
      - run: .github/workflows/check-environment.sh
      - run: .github/workflows/check-ros-distribution.sh "${{ matrix.ros_distribution }}"
        if: matrix.ros_version == 1
      - run: .github/workflows/check-ros2-distribution.sh "${{ matrix.ros_distribution }}"
        if: matrix.ros_version == 2

  test_multiple_ros_installations:
    name: "ROS and ROS 2 Binary Install Test Suite (Linux only)"
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2.2.0
        with:
          node-version: "12.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./ # Uses an action in the root directory
        with:
          required-ros-distributions: melodic dashing
      - run: .github/workflows/check-ros2-distribution.sh dashing
      - run: .github/workflows/check-ros-distribution.sh melodic

  test_on_setup_ros_docker_container:
    name: "Test on a setup-ros-docker container"
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2.2.0
        with:
          node_version: "12.x"
      - run: .github/workflows/build-and-test.sh
      - uses: ./
